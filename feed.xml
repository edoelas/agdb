<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/agdb/feed.xml" rel="self" type="application/atom+xml" /><link href="/agdb/" rel="alternate" type="text/html" /><updated>2021-06-13T00:23:42+02:00</updated><id>/agdb/feed.xml</id><title type="html">Another game development blog</title><entry><title type="html">Easy to implement visual accessibility features.</title><link href="/agdb/2021/06/11/About-easy-to-implement-accesibility.html" rel="alternate" type="text/html" title="Easy to implement visual accessibility features." /><published>2021-06-11T00:00:00+02:00</published><updated>2021-06-11T00:00:00+02:00</updated><id>/agdb/2021/06/11/About-easy-to-implement-accesibility</id><content type="html" xml:base="/agdb/2021/06/11/About-easy-to-implement-accesibility.html">&lt;div class=&quot;admonition attention&quot;&gt;
&lt;p class=&quot;admonition-title&quot;&gt;Attention&lt;/p&gt;
&lt;p&gt;Work In progress&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Imagine: today is the release date of the game you have been waiting for. Maybe it is Star Citizen, Cyberpunk 2077 or the steam version of Dwarf Fortress. You spend a nice amount of money, download it and start it. Once inside the game, you can’t understand the main menu. That’s not a problem, you just guess and somehow manage to start a game. Second disappointment: you can’t see the in-game interface. The game is unplayable. It looks interesting; you devise some features shown in the trailer, but you can’t play it. It is torture.&lt;/p&gt;
&lt;p&gt;This is an empathy exercise about what people with visual impairment feel with lots of games. Hopefully, most of the people reading this will not have this problem. Vision related disabilities have a tremendous impact on people’s lives, the least we can do as game developers is to allow them to enjoy our games. At the end that’s the goal of game developers, to create something for others to enjoy.&lt;/p&gt;
&lt;p&gt;The report about &lt;a href=&quot;https://www.who.int/blindness/GLOBALDATAFINALforweb.pdf&quot;&gt;global data on visual impairments 2010&lt;/a&gt; made by the WHO tells us how many people have moderate or severe vision impairment:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;Ages (years)&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Population (millions)&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Blind (millions)&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Low Vision (millions)&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Visually Impaired (millions)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;0-14&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1,848.50&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1.421&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;17.518&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;18.939&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;15-49&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;3548.2&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;5.784&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;74.463&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;80.248&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;50-inf&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;1,340.80&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;32.16&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;154.043&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;186.203&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;&lt;strong&gt;all ages&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;strong&gt;6,737.50&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;strong&gt;39.365&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;strong&gt;246.024&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;strong&gt;285.389&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;That means that 4.24% of the global population is visually impaired (0.58% blind and 3.65% low vision). Although this data does not consider the colour blindness, it should give us a rough idea of how many people will experience visual difficulties when playing our games.&lt;/p&gt;
&lt;p&gt;But don’t worry, there is a way to help visually impaired people to enjoy our games: accessible design. During the presentation &lt;a href=&quot;https://www.youtube.com/watch?v=pa6fsPMqAmU&quot;&gt;Accessible Player Experiences: A New Approach to Data Informed Design for Accessible Games&lt;/a&gt; done by the &lt;a href=&quot;https://ablegamers.org/&quot;&gt;The AbleGamers Charity&lt;/a&gt; in the 2019 &lt;a href=&quot;https://gdconf.com/&quot;&gt;Game Developers Conference&lt;/a&gt;, they described accessibility with these words:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Accessibility in games is about getting players having experiences in games alongside their peers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A more technical definition from &lt;a href=&quot;https://www.w3.org/WAI/&quot;&gt;The Web Accesibility Initiative&lt;/a&gt;, an initiative from the &lt;a href=&quot;https://www.w3.org/&quot;&gt;World Wide Web Consortium&lt;/a&gt;, defines it as:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Web accessibility means that websites, tools, and technologies are designed and developed so that people with disabilities can use them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think you get the idea. So the question now is: How do I make my game accessible? That question is tricky because it is really complicated to make a game 100% accessible for everybody. The conditions of our players can vary a lot and covering all of them can be a huge challenge. We, as indie developers, might not have the resources or experience of AAA game companies, but that’s not an excuse to not to provide some basic accessibility features. In fact, indie games sometimes are the best ones at this, some examples being &lt;a href=&quot;http://hyperdotgame.com/&quot;&gt;Hyperdot&lt;/a&gt;, &lt;a href=&quot;https://store.steampowered.com/app/431940/Wildfire/&quot;&gt;Wildfire&lt;/a&gt; or &lt;a href=&quot;https://store.steampowered.com/app/1060600/Lair_of_the_Clockwork_God/&quot;&gt;Lair of the Clockwork God&lt;/a&gt;, all of them with great accessibility features.&lt;/p&gt;
&lt;p&gt;In this post my goal is to cover two topics that will make our game way more accessible for the visually impaired people and that are really easy to implement: scaling and colour. The key word is easy. Low effort, big gains.&lt;/p&gt;
&lt;h3&gt;GUI scaling.&lt;/h3&gt;
&lt;p&gt;TThis is probably the most important accessibility feature. The ability to scale the GUI (Graphical User Interface) makes it easier for the people with &lt;a href=&quot;https://www.nei.nih.gov/learn-about-eye-health/eye-conditions-and-diseases/low-vision&quot;&gt;low vision&lt;/a&gt;.  It is based on a really complex principle: the bigger the easier to see. Seems easy, right? You just need to make everything bigger and that’s all. If you have designed interfaces for games before, I am sure you know that what seems easy on the surface ends up being not so much. This post is not about GUI design but I will leave you at the end some interesting posts about the importance of this topic since we usually overlook it.&lt;/p&gt;
&lt;p&gt;To continue the explanation, we need to understand the different user interfaces in games. The most common classification is this one:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Diagram about the diferent kinds of game interfaces extracted from A sound idea: An investigation into accessible video game design for the deaf and hard of hearing.&quot; src=&quot;/agdb/assets/media/2021-06-06-About-easy-to-implement-accesibility/kinds_of_interfaces.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;For the sake of this post, we are just going to classify them in two:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Non-diegetic&lt;/strong&gt;: Does not belong to the fictional world. Just the players in the real world can see it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Diegetic&lt;/strong&gt;: Belongs to the game world. Characters can perceive it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When making our game interface scalable, we should allow to scale the diegetic and non-diegetic elements independently. Just in case you are not following me: the user should be able to make zoom and scale the buttons without one thing affecting the other, it is not about changing the render resolution. This is useful not just for accessibility but also to adapt our interface to different display sizes and &lt;a href=&quot;https://en.wikipedia.org/wiki/Dots_per_inch&quot;&gt;DPI&lt;/a&gt;s. I will add another suggestion: allow the text to be scaled independently of the non-diegetic interface (buttons, menus, subtitles etc.). Depending on our design choices, the buttons and icons might be recognizable enough but not the text. This is specially important for the subtitles.&lt;/p&gt;
&lt;p&gt;So far seems simple, right? Believe me, you will have problems. Two elements will collide, the text will get outside its box, some elements will look giant, etc.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Wireframe sketch showing problems.&quot; src=&quot;/agdb/assets/media/2021-06-06-About-easy-to-implement-accesibility/sketch_problems.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Is a good idea to start the development of the interface with these features in mind. Having the problems shown in the image means the developer did not implement the image properly, and that, besides the accessibility, it will not look good in all screen sizes and resolutions. If you make an implementation with these features, you will have moved a big step towards good design and accessibility.&lt;/p&gt;
&lt;h3&gt;Colours.&lt;/h3&gt;
&lt;p&gt;Sometimes making things bigger is not enough. Some people will have problems if the contrast between the text and the background is too low. To solve this problem, the recommendation is to provide at least two palettes: one of your choice and another one with high contrast. A high contrast palette will help both, people with low vision and with colour blindness. But sometimes this might not be enough. We will start talking about high contrast.&lt;/p&gt;
&lt;p&gt;How much contrast is enough? That is an easy one, 7:1 contrast ratio is enough for most use cases. Let me explain. Any colour (inside a colour space) has what we call &lt;a href=&quot;https://en.wikipedia.org/wiki/Relative_luminance&quot;&gt;relative luminance&lt;/a&gt;. Having the relative luminance of two colours, we can calculate the contrast ratio with this formula:&lt;/p&gt;
&lt;p&gt;$$ CR = \frac{L1 + 0.05}{L2 + 0.05} $$&lt;/p&gt;
&lt;p&gt;Where L1 is the relative luminance of the lighter colour and L2 the relative luminance of the darker colour. In order to calculate the relative luminance we use this formula:&lt;/p&gt;
&lt;p&gt;$${\displaystyle Y=0.2126R+0.7152G+0.0722B.}$$&lt;/p&gt;
&lt;p&gt;But wait, usually we work with gamma-compressed RGB, so first, we have to decompress the RGB values to gamma-expanded values. We can use this easy to remember formula to do that:&lt;/p&gt;
&lt;p&gt;$$ {\displaystyle \gamma ^{-1}(u)={\begin{cases}{\frac {u}{12.92}}&amp;amp;={\frac {25u}{323}}&amp;amp;u\leq 0.04045 \newline \left({\tfrac {u+0.055}{1.055}}\right)^{2.4}&amp;amp;=\left({\tfrac {200u+11}{211}}\right)^{\frac {12}{5}}&amp;amp;{\text{otherwise}}\end{cases}}}$$&lt;/p&gt;
&lt;p&gt;Where $u$ is ${R_{\mathrm {srgb} }}$, ${G_{\mathrm {srgb} }}$, or ${B_{\mathrm {srgb} }}$.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;There must be an easier way...&lt;/strong&gt; Yes, there is the &lt;a href=&quot;https://webaim.org/resources/contrastchecker/&quot;&gt;WebAIM&lt;/a&gt; website, which calculates all of this automatically. It also gives you examples of how different text sizes would look with those colours. If you are working with web technologies, I recommend you to use the &lt;a href=&quot;https://www.getstark.co/&quot;&gt;Stark&lt;/a&gt; google chrome extension. It allows you to select text from a web and it will extract the colours and calculate everything for you. It also allows you to simulate vision problems on the entire website.&lt;/p&gt;
&lt;p&gt;Okay, so now we know how to calculate the contrast, but how much is enough contrast? The &lt;a href=&quot;https://www.w3.org/WAI/&quot;&gt;Web Accesibility Initiative&lt;/a&gt; stipulates how much is the minimum and the enhanced color contrast in their &lt;a href=&quot;https://www.w3.org/WAI/WCAG21/quickref/?versions=2.0&amp;amp;col_overview#contrast-minimum&quot;&gt;reference document&lt;/a&gt;. Consider that this was thought for web, but those numbers also should work fine for video games.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;AA (minimum)&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;AAA (enhanced)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Normal text&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;4.5:1&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;7:1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Large text&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;3:1&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;4.5:1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We should aim for the AAA. Here there are a few tests that I have done. The background always is the same, but the content changes to archive the desired contrast ratio.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Test showing multiple contrast ratios.&quot; src=&quot;/agdb/assets/media/2021-06-06-About-easy-to-implement-accesibility/contrast_test.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;That does not mean that we have to create a palette where every color has a contrast ratio of 7:1 with all the other colours. We have to think about how are we going to use the colours and just worry about the contrast between elements that give information and its background. Quoting the Web Accessibility Initiative about incidental text:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Text or images of text that are part of an inactive user interface component, that are pure decoration, that are not visible to anyone, or that are part of a picture that contains significant other visual content, have no contrast requirement.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That means that we should not worry about the colours whose only purpose is to be used for decorations. But be careful, elements different from text that show information also deserve high contrast, for example, the lines that organize our UI. Here is an example:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Example showing where to use high contrast colours. The second column has an achromatopsia filter.&quot; src=&quot;/agdb/assets/media/2021-06-06-About-easy-to-implement-accesibility/ui_test.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Just one color, used in the vertical separators, has changed. In the first example we see how the shadows disappear, but all the important information still is there. In the second example, the vertical separators disappear. This information is not trivial, so we should avoid designs like this one. Also, it looks like crap.&lt;/p&gt;
&lt;p&gt;A high contrast palette might not be enough. This is specially true when colours are meaningful, for example, colours of teams. In these kinds of situations is hard to design with high contrast. What if there are 5 or even more teams? Should each one have a different luminance? Thankfully, these situations are not a problem for people with low vision problems. As far as there is enough contrast between the players and the background they will be able to see properly the shapes. But what for colour blind people? Let’s see an example:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Example showing two teams, green and red, over brown background. The second image has a deuteronopia filter.&quot; src=&quot;/agdb/assets/media/2021-06-06-About-easy-to-implement-accesibility/teams_test2.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;TThe image has gone through a deuteronopia filter. If you have deuteronopia, you will have a hard time playing this game. Deuteronopia is one kind of colour blindness, there are more. But what is colour blindness? The &lt;a href=&quot;https://www.aao.org/eye-health/diseases/what-is-color-blindness&quot;&gt;American Academy of Ophtamology&lt;/a&gt; explains it in their website:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Color blindness occurs when you are unable to see colors in a normal way. [...] Color blindness can happen when one or more of the color cone cells are absent, not working, or detect a different color than normal.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In our retina we have rods and cones. Rods detect light intensity and cones colour. We have three different types of cones, each type detects one colour: red, green and blue. Then, those colours merge in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Hue&quot;&gt;hue&lt;/a&gt; we perceive. It is not a coincidence that we use the RGB model. Deuteranopia, the problem simulated in the image, has to do with the green cones, they do not work properly.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Image showing simulations of the different problems related to colour perception.&quot; src=&quot;/agdb/assets/media/2021-06-06-About-easy-to-implement-accesibility/color_blind_types.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Around 4.5% of the population has some kind of colour blindness. Just in case you did not notice it, 4.5% is a ton of people. The most common of the colour related problems is Deuteranopia (problems with green cones), which results in a similar perceived colour palette to the second most common problem, protanopia (problem with red cones). Usually, we refer to those two problems as red-green colour blindness. Then there is tritanopia, which is really rare (around 1 every 10.000 people) and has to do with the blue cones. The last one is achromatopsia, where your cones are not working at all and you see the life in shades of gray. Thankfully, this one is ultra rare, affecting 1 person every 33.000.&lt;/p&gt;
&lt;p&gt;At this point I think you already know how to make it easier for colour blind people to play our games. You are right, with an alternative colour palette. But which one? Don’t worry, there pre-made accessible palettes. My recommendations are The &lt;a href=&quot;https://jfly.uni-koeln.de/color/#checker&quot;&gt;Okabe-Ito&lt;/a&gt; or &lt;a href=&quot;https://personal.sron.nl/~pault/#sec:qualitative&quot;&gt;Tol&lt;/a&gt;&apos;s palette. Both of them work really well and were created based on scientific evidence. As a curious fact, I will say that in the book &lt;a href=&quot;https://clauswilke.com/dataviz/index.html&quot;&gt;Fundamentals of Data Visualization&lt;/a&gt; published by &lt;a href=&quot;https://www.oreilly.com/&quot;&gt;o&apos;reilly&lt;/a&gt; the author choose to use the Okabe-Ito palette. Okabe-Ito’s palette is composed of 8 colours while Tol suggests multiple palettes so we can choose the right one for our application. If you have to pick one I would suggest that you visit their posts with a tool to simulate the colour vision deficiencies (I recommend Spark) and judge by yourself. Personally I prefer the Okabe-Ito one.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;The palette proposed by Masataka Okabe and Kei Ito: #E60F00, #56B4E9, #009E73, #F0E442, #0072B2, #D55E00, #CC79A7, #000000 .&quot; src=&quot;/agdb/assets/media/2021-06-06-About-easy-to-implement-accesibility/okabe-ito.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;One palette proposed by Paul Tol: #4477AA, #66CCEE, #228833, #CCBB44, #EE6677, #AA3377, #BBBBBB .&quot; src=&quot;/agdb/assets/media/2021-06-06-About-easy-to-implement-accesibility/tol.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I think now it is an adequate moment to make a call to &lt;a href=&quot;https://matplotlib.org/&quot;&gt;Matplotlib&lt;/a&gt; to change its default colour palette.&lt;/p&gt;
&lt;p&gt;The ultimate boss when it comes to colour blindness is achromatopsia. No hue at all. I have to admit that this one does not have an easy fix, but since we are here, it is worth it talking about it. The only way to overcome it is not relying on colour, we need alternative ways to give the user this information. If your game uses colour to show things like kinds of enemies or different types of ammo, you might think that this must be impossible. If there is a game called &lt;a href=&quot;https://www.curve-digital.com/en-us/games/detail/5/hue/&quot;&gt;Hue&lt;/a&gt; which did it, you can do it too. Another one is &lt;a href=&quot;https://pixel-maniacs.com/chromagun&quot;&gt;Chroma Gun&lt;/a&gt; that, you guessed it, is about colours. They just put icons on top of the colours.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Example of the accesibility features of Hue.&quot; src=&quot;/agdb/assets/media/2021-06-06-About-easy-to-implement-accesibility/hue_game.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Example of the accesibility features of Chroma Gun.&quot; src=&quot;/agdb/assets/media/2021-06-06-About-easy-to-implement-accesibility/chroma_gun.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Besides the accessibility, making a game where the only difference is in the colour feels really cheap. For example, if your enemy has strengthened and now is stronger, do not change its colour from purple to red and call it a day. Add some spikes or fire to its design, make it interesting.&lt;/p&gt;
&lt;h3&gt;Conclusion.&lt;/h3&gt;
&lt;p&gt;If you have reached the end of the post I am sure that you are aware of the importance of accesibility in games. Allowing these people to enjoy our games is the least we can do for them, and, as shown in this post, we do not need to invest exhorbitants ammounts of money or hire a specialist. With something as simple as allowing for an alternative palette and making things bigger, we can make our game more playable.&lt;/p&gt;
&lt;p&gt;Today we have talked about visual problems, but sadly there are way more. Maybe in the future I make a post about motor disabilities since custom peripherals are an interesting topic. I cannot finish this post without suggesting you the videos from &lt;a href=&quot;https://www.youtube.com/channel/UCqJ-Xo29CKyLTjn6z2XwYAw&quot;&gt;Game Maker&apos;s Toolkit&lt;/a&gt; youtube channel about &lt;a href=&quot;https://www.youtube.com/watch?v=xrqdU4cZaLw&quot;&gt;visual&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=ObhvacfIOg0&quot;&gt;cognitive&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=Ufe0i26DGiA&quot;&gt;motor&lt;/a&gt; and &lt;a href=&quot;https://www.youtube.com/watch?v=4NGe4dzlukc&quot;&gt;auditory&lt;/a&gt; disabilities. They are a must. Each video consists in 10 minutes full of useful recommendations with examples of actual games. Also, he makes a &lt;a href=&quot;https://www.youtube.com/watch?v=RWQcuBigOj0&quot;&gt;yearly review of the state of the accesibility in games&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Last-minute news&lt;/strong&gt;: In the last release of Minecraft, released the 8 of June 2021, Mojang has changed the classic ore textures. The reason is to make the game more accessible. Before all the ores had the same shape and just the colour changed, now the shape is different.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Changes of the textures of Minecraft&apos;s ores. Image obtained from Isk Mogul.&quot; src=&quot;/agdb/assets/media/2021-06-06-About-easy-to-implement-accesibility/minecraft.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Finally, I leave you with some resources that I find interesting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Three articles from the great blog &lt;a href=&quot;https://www.rockpapershotgun.com/&quot;&gt;Rock Paper Shotgun&lt;/a&gt; about the importance and difficulties of UI design. Each one talks about a specific game:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.rockpapershotgun.com/into-the-breach-interface-design&quot;&gt;Into the Breach&apos;s interface was a nightmare to make and the key to its greatness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.rockpapershotgun.com/how-typing-heightens-duskers-deep-space-horror&quot;&gt;How Typing Heightens Duskers&apos; Deep-Space Horror&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.rockpapershotgun.com/the-secret-behind-invisible-inc-is-giving-you-loads-of-information&quot;&gt;The Secret Behind Invisible, Inc. Is Giving You Loads Of Information&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.toptal.com/designers/gui/game-ui&quot;&gt;Level Up – A Guide to Game UI (with Infographic)&lt;/a&gt;: great explanation about the different kinds of game UI.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://gamesforchange.org/studentchallenge/game-accessibility-resources/&quot;&gt;Games for change student challenge: game accesibility resources&lt;/a&gt;: this website has a ton of resources to make our games more accessible. A great place to start our research.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://ablegamers.org/&quot;&gt;Able Gamers Charity&lt;/a&gt;: charity whose mission is making games more accessible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://medium.muz.li/the-science-of-color-contrast-an-expert-designers-guide-33e84c41d156&quot;&gt;The Science of Color Contrast — An Expert Designer’s Guide&lt;/a&gt;: a concise guide about colour contrast.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://observablehq.com/@sebastien/srgb-rgb-gamma&quot;&gt;sRGB, RGB &amp;amp; Gamma&lt;/a&gt;: a technical, well made, interactive, and easy-to-understand guide about colour properties. It has a chapter about accessibility and colour blindness simulation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.w3.org/WAI/WCAG21/quickref/?versions=2.0&amp;amp;showtechniques=141%2C146&amp;amp;currentsidebar=%23col_overview#contrast-enhanced&quot;&gt;How to Meet WCAG (Quick Reference)&lt;/a&gt;: reference made by the Web Accessibility Initiative.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://mapeper.github.io/jsColorblindSimulator/&quot;&gt;jsColorblindSimulator&lt;/a&gt;: the best color blind simulator for images I have found. The only thing missing is the option to download images.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://davidmathlogic.com/colorblind/&quot;&gt;Coloring for Colorblindness&lt;/a&gt;: amazing post about palettes for color-blind people. It has a colour picker that allows us to create a palette, then it simulates how people with deuteranopia, protanopia and tritanopia see it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="Accesibility" /><category term="WIP" /></entry><entry><title type="html">I am a sinner</title><link href="/agdb/2021/05/25/I-am-a-sinner.html" rel="alternate" type="text/html" title="I am a sinner" /><published>2021-05-25T00:00:00+02:00</published><updated>2021-05-25T00:00:00+02:00</updated><id>/agdb/2021/05/25/I-am-a-sinner</id><content type="html" xml:base="/agdb/2021/05/25/I-am-a-sinner.html">&lt;p&gt;&lt;img alt=&quot;How did the blog look before the redesign.&quot; src=&quot;/agdb/assets/media/2021-05-25-I-am-a-sinner/old_blog.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I have sinned. I said I wanted to keep this blog as minimal as possible. I bragged about the few lines I use. That I was just using 60 CSS lines. What have I done? Now I use around 200 lines of CSS. How many lines I will be using tomorrow? 1.000? 10.000? Nobody knows. I have become what I promised to destroy. I am a monster. I am the father of the bloat.&lt;/p&gt;
&lt;p&gt;Okay, enough stupidity for today, now I am going to talk about what happened. Did I just woke up one morning and decided to spend my whole day fiddling with CSS? No, as I said I am not a web designer but, like any human, I like beautiful things. Two days ago, 23 May 2021, the day of the creation of this blog, at 22:08 I sent the blog link to one of my friends and he replies:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;Ugly as a toad.&quot;&lt;br&gt;- A. K.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That response opened my eyes. My reaction was not immediate but that comment started the redesign. The harsh truth is that the default browser fonts are not the best ones.&lt;/p&gt;
&lt;p&gt;When I did my first blog I loved its home page but two days ago, when I changed the layout of it, I discovered that my old home page was garbage. Two days ago I thought that the design of my blog was almost perfect. Now I think it was garbage. As we say here: &quot;Who does not know God will pray to any saint.&quot; And that is exactly what happened. Now my question is: in a year or so, will I find that this blog is garbage and discover something way better? Is that even possible? I would think that it is not possible, but the recent events suggest the opposite.&lt;/p&gt;
&lt;h3&gt;The changes&lt;/h3&gt;
&lt;p&gt;Originally I just thought of doing a few quality of life changes. Most of them are already done:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Adding RSS&lt;/strong&gt;. Yes, you can read my blog without ever entering my blog. Without appreciating the beauty of it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Hide useless links when printing&lt;/strong&gt;. If you want to print some article now you can do it without printing the ugly &lt;a href=&quot;/agdb/&quot;&gt;home&lt;/a&gt; links. I don&apos;t know if anybody will print them but it is a problem that I have encountered when saving other web pages as PDF.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Google Analytics&lt;/strong&gt;. Google knows what are you eating right now. Are you using &lt;a href=&quot;https://duckduckgo.com/&quot;&gt;DuckDuckGo&lt;/a&gt;? Useless on this page. I just want to know (for free) how many people is visiting my blog and where are the visitors from. Any alternatives are welcome, my email is at the end of the home screen. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Improved the HTML code&lt;/strong&gt;. It was quite good, but there were still some problems because I did not understand how &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; works. Now it is even better.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are still some things to do:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Improve search&lt;/li&gt;
&lt;li&gt;Adapt design for smartphones&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/67660810/is-there-a-way-in-jekyll-to-set-a-base-path-for-images&quot;&gt;Solve hassle with image insertion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/19331362/using-an-image-caption-in-markdown-jekyll&quot;&gt;Alt text below images&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But while I was at it I thought: &quot;Why not take this opportunity to improve the design?&quot;. My plan was just to change the colours and fonts. In fact, that is exactly what I did, but with an attention to detail I never believed to be possible (for me).&lt;/p&gt;
&lt;h3&gt;The redesign&lt;/h3&gt;
&lt;p&gt;First of all and the most important thing: &lt;strong&gt;no HTML code has been harmed during the redesign of this blog&lt;/strong&gt;. The HTML code hasn&apos;t been changed at all. Everything is CSS work. That&apos;s nice.&lt;/p&gt;
&lt;p&gt;Another important thing: &lt;strong&gt;No useless CSS classes have been created to archive this purpose&lt;/strong&gt;. All the redesign has been done by modifying the CSS of already existing classes and HTML elements. I have just created one class, &lt;code&gt;.dontprint&lt;/code&gt;, which is used to hide the home links when printing.&lt;/p&gt;
&lt;p&gt;How did I make it? By overwriting the classes used by Jekyll when converting my &lt;a href=&quot;https://en.wikipedia.org/wiki/Markdown&quot;&gt;Markdown&lt;/a&gt; to HTML. It is not like I could do it any other way. Jekyll generates automagically the HTML code so I can&apos;t use classes or choose the HTML tags. &lt;/p&gt;
&lt;p&gt;Most of the work has been done on the fonts. To get the fonts right (or what seems right to me) seemed challenging but after reading some guides I think I made good decisions. At the end of the page I will leave some resources I find interesting, but now I want to share with you the most influential one: &lt;a href=&quot;https://design.google/library/choosing-web-fonts-beginners-guide/&quot;&gt;Choosing Web Fonts: A Beginner’s Guide&lt;/a&gt;. First, the content is interesting for beginners. Second, don&apos;t you see a similarity between that blog and my blog? No, I did not copy everything. When I found this blog post I already knew that I was going to use Roboto, that I wanted dark letters over a light background and some other things. To decide the weight and size of the fonts I used another guide. So what did I took from this website? Two important things: the colours and the links.&lt;/p&gt;
&lt;h4&gt;Links&lt;/h4&gt;
&lt;p&gt;Let&apos;s start with the links. CSS allows you to modify the appearance of the links under four different circumstances: unvisited, visited, hovered and, pressed. First I thought about changing the colour to a lighter grey when hovering and then to an even lighter grey when pressing. I also was thinking to let the user know when a link has been already visited... probably using another grey? Four greys just for the links are too many greys. Using two different greys for text is fine. Three for some specific purposes can be interesting but Four for the same element? No. If you have a look at the &lt;a href=&quot;https://design.google/library/racial-equity-everyday-products/&quot;&gt;Google Design blog&lt;/a&gt; they use black for links and on hover they hide the underline. Just beautiful. It is not intrusive, does not require to use more colours, is easy to understand and to implement, gives exactly the right amount of information, blends well with the rest of the text etc. Markdown does not have an underline option so it cannot lead to confusion. I like to use lots of links during the writing and this is an awesome solution. The CSS code looks like this:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;hover&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;active&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;text-decoration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Colours&lt;/h4&gt;
&lt;p&gt;Now we are going to talk about colour. On lots of websites, I have seen backgrounds and letters that are grey. Dark grey letters on top of a light grey background. I believed in this since the contrast is reduced, making it less uncomfortable to look at, while the text could be read perfectly. But the designers in google are really brave. Black on top of white. I am following the path of the brave with them. Either we win or we fall together, and I don&apos;t think google is going to fall any time soon. In the material design guide about &lt;a href=&quot;https://material.io/design/color/text-legibility.html#legibility-standards&quot;&gt;Text legibility&lt;/a&gt; they also suggest using dark grey for less important content, so I did. Finally, I have added a light grey to use as a box for special content, for example, code blocks.&lt;/p&gt;
&lt;p&gt;Now I have 4 colours, &lt;code&gt;#fff&lt;/code&gt;, &lt;code&gt;#eee&lt;/code&gt;, &lt;code&gt;#333&lt;/code&gt;, &lt;code&gt;#000&lt;/code&gt;, each one with a specific purpose. That&apos;s all I need. It is still comfortable to read and the contrast is high enough that everybody can read it. The colour palette is quite straightforward: four colours, two for the background and two for the text.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Colours in order: #fff, #eee, #333, #000 . First one invisible since it is the same colour as the background.&quot; class=&quot;pixel&quot; src=&quot;/agdb/assets/media/2021-05-25-I-am-a-sinner/colours.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Another question to think about is which colour palette to use for the code highlight. I think that is something I will take care of in the future. So far I have just chosen the &lt;a href=&quot;http://jwarby.github.io/jekyll-pygments-themes/languages/python.html&quot;&gt;Tango&lt;/a&gt; theme from &lt;a href=&quot;https://pygments.org/&quot;&gt;Pygments&lt;/a&gt; but I will modify it soon since I have been told that some colours might not have enough contrast.&lt;/p&gt;
&lt;h4&gt;Fonts&lt;/h4&gt;
&lt;p&gt;Fonts are really important for this blog. As you have seen there are no fancy graphics, menus, side boxes or anything. Everything is text. Not even buttons, I am using links. The only images you will find are the ones inside the posts and the favicon. I have made the conscious decision of not putting an image as the header of each post, as almost any other blog does. The fear of text-oriented content is a barrier that once overcome is very rewarding. I was taught that by a terminal.&lt;/p&gt;
&lt;p&gt;I wanted to use Roboto as the font for my text. It is used by Google so it must be a good choice. Google designers must know a couple of things about web design. I was planning to use a secondary font for some specific purposes but looking at the google design blog I found out that they were using only Roboto (that&apos;s not 100% true). Once again I believed in Google and used only Roboto. In fact, for the inline code and code blocks I am using Roboto on its mono variant. The usage of Roboto as my main and only font is not a fixed decision since I have read that for long text a serif font can be better suited. No one knows what the future holds.&lt;/p&gt;
&lt;p&gt;In the guide about &lt;a href=&quot;https://material.io/design/typography/the-type-system.html#applying-the-type-scale&quot;&gt;the type system&lt;/a&gt; I discovered that it was not just about using one font and call it a day. It was about choosing the right size, weight, colour and spacing. This is the CSS that takes care of the important things related to the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.5&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;letter-spacing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;-.01875&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;word-spacing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;line-height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.125&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;margin-top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
  &lt;span class=&quot;k&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
  &lt;span class=&quot;n&quot;&gt;text-rendering&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;optimizeLegibility&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I am happy with how the fonts are looking now but there is room for improvement. I have barely touched the spacing between lines, words and characters. I hope you agree that choosing the right font is more complicated than it seems.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;I have done more changes than the ones explained here but this blog is not about web development. My reasoning when writing this blog is that it could help other developers who decide to create their own blog. In the end, I am using just 100-150 extra CSS lines and importing 2 fonts. I am not a designer by any mean as you may have discovered I just have merged some things that I found interesting, so do not take this as a guide. If you are curious about the CSS it is published on GitHub under the path &lt;code&gt;/assets/css/BMFB.css&lt;/code&gt;. The name stands for Better Mother Fu**ng Blog as a tribute to &lt;a href=&quot;http://bettermotherfuckingwebsite.com/&quot;&gt;bettermotherfuckingwebsite&lt;/a&gt;, the web that I used as my main inspiration when doing the first version of the Blog.&lt;/p&gt;
&lt;p&gt;Here there are some markdown elements that I haven&apos;t shown yet. Those elements are latex-like horizontal rules, math formulas, and tables:&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;$$mean = \frac{\displaystyle\sum_{i=1}^{n} x_{i}}{n}$$&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;First name&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Last name&lt;/th&gt;
&lt;th align=&quot;right&quot;&gt;Number&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Mario&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Vargas&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;123123123&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Manuel&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Goterris&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;13058375&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Pablo&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Albiol&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;247674363&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Probably there will be one last post about the blog itself where I will talk about the super simple search engine that I will implement and some minor changes. I promise that it will be the last one about web development.&lt;/p&gt;
&lt;p&gt;Here there are some resources that I found interesting while redesigning the blog:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://material.io/design/color/text-legibility.html#legibility-standards&quot;&gt;Material design: Text legibility&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://material.io/design/typography/the-type-system.html#applying-the-type-scale&quot;&gt;Material design: The type system&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://design.google/library/choosing-web-fonts-beginners-guide/&quot;&gt;Choosing Web Fonts: A Beginner’s Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.a11yproject.com/posts/2013-01-25-never-remove-css-outlines/&quot;&gt;Never remove CSS outlines&lt;/a&gt;. This post also is interesting because of its design.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://fonts.google.com/&quot;&gt;Google Fonts&lt;/a&gt;. This is the place where I am taking the fonts from. Easy, free and reliable. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="Presentation" /><category term="meta" /><category term="design" /><category term="blog" /></entry><entry><title type="html">About game engines</title><link href="/agdb/2021/05/23/About-game-engines.html" rel="alternate" type="text/html" title="About game engines" /><published>2021-05-23T20:00:00+02:00</published><updated>2021-05-23T20:00:00+02:00</updated><id>/agdb/2021/05/23/About-game-engines</id><content type="html" xml:base="/agdb/2021/05/23/About-game-engines.html">&lt;p&gt;Second blog post, and on the same day. You can call me a workaholic. The truth is that I just wanted to write something more related to game development. There are lots of things I have already learned that I will be publishing during the next few days. Today we are talking about game engines. The title is a bit misleading since I will not talk just about game engines, I will also talk about frameworks and other tools, we could rewrite the title as: &quot;About things that we use to do games&quot;. But it was not that catchy.&lt;/p&gt;
&lt;p&gt;When we decide to develop a game the first important decision is what do we want to develop. And it is not until we have taken that decision (or at least, we have a slight idea of the answer) that we can move to the next big question: &quot;Which tools should I use?&quot;. Most of the time we are referring to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Game_engine&quot;&gt;game engine&lt;/a&gt;. And that is a quite difficult question. First of all, I am not a game engine expert. As I wrote in the first post I barely know anything about game development, but  I know some things about computer science and I will say a few words that can be helpful for beginners.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Avoid searching on google &quot;Which is the best game engine?&quot; or similar questions&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Most of the results of that search will be pages that rank game engines based on doubtful criteria. I am not going to talk about why probably those rankings are crap but I will say this: taking your decision based on those rankings makes no sense. &lt;/p&gt;
&lt;p&gt;Each game has different requirements. If you are going to do a 2D roguelike why would you pick the fastest 3D rendering game engine? Or if you want to make a simple puzzle game, why would you choose the game engine with the best physics engine? I think that there is no need to further develop this point. My suggestion is to make a list with the requirements of your games, with at least two sections: mandatory features and nice to have ones. Once you have that list you can start your search.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Game development frameworks also exist&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I feel that most of the people interested in game design come from two groups: people interested in art and people interested in computers. If you are an artist with no experience in programming, I would suggest you to pick a game engine, but if you are a computer engineer,  you probably want to have a look at some of the frameworks. For me, the main advantages of frameworks are that you have more freedom and the chance to automate everything. No more clicking buttons and selecting dropdowns.&lt;/p&gt;
&lt;p&gt;That being said, frameworks usually are better suited for some kinds of games over others. If you want to do a 3D shooter game, a game engine with a nice level editor and illumination will be better. I also have the feeling that game engines tend to give you pre-made solutions while game frameworks leave these problems to the user. For example, all the big game engines give you some kind of &lt;a href=&quot;https://en.wikipedia.org/wiki/Entity_component_system&quot;&gt;ECS&lt;/a&gt;, but frameworks like &lt;a href=&quot;https://libgdx.com/&quot;&gt;libGDX&lt;/a&gt; or &lt;a href=&quot;https://www.raylib.com/index.html&quot;&gt;raylib&lt;/a&gt; do not include it. Game frameworks are more barebones.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Community, documentation, and programming language&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The three most important things in a Linux distro for me are community, documentation and repositories. It is a good idea to follow the same approach with game engines/frameworks. Instead of repositories now we are talking about programming languages and libraries.&lt;/p&gt;
&lt;p&gt;Of course, first, you need to make sure that it has the features that you need but after that, I think this is the next obvious rule to follow. These three things won&apos;t make your game run faster or to be prettier, at least not directly, but they will allow you to have a smoother experience. This point is especially important for beginners, like me. When starting the complexity can be a huge barrier.&lt;/p&gt;
&lt;p&gt;Programing languages is a huge topic on its own but I would suggest you &lt;strong&gt;not&lt;/strong&gt; to pick the engine based on the languages that you know but the other way around, pick the language based on the engine that you are going to use. Lots of frameworks allow you to use multiple programming languages. Raylib for example has bindings for a ton of programming languages and libGDX can be used with most of the languages that run under the &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_virtual_machine&quot;&gt;Java Virtual Machine&lt;/a&gt;. Game engines usually are more restrictive but for example, &lt;a href=&quot;https://godotengine.org/&quot;&gt;Godot&lt;/a&gt; allows you to use GDScript, Visual Scripting, C# and, C++. One of the most popular game engines for indie games, Unity, allows you to use C++ and C#. There are &lt;a href=&quot;https://www.reddit.com/r/golang/comments/kqg7pl/unitygolang_using_golang_as_a_scripting_engine/&quot;&gt;workarounds&lt;/a&gt; in order to use other languages, but I would suggest against them because usually, the communities around these are non-existent. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;You do not need such a powerful game engine&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If you are a &lt;a href=&quot;https://en.wikipedia.org/wiki/AAA_(video_game_industry)&quot;&gt;AAA&lt;/a&gt; company or you are planning to start a revolution in real-time 3D graphics forget about this point. If you are an indie developer I think it makes a lot of sense. Believe me, I have been there, I have been obsessed with using the fastest tools and it was a big mistake that was just slowing me down. If you do not believe me make a list of all the indie games that are not 2d or low poly and use high-resolution textures and models. I think you will have a hard time. And there is a reason for that: these kind of assets are really expensive (in terms of time and money), so it is not suitable for indie games, where the budget is a big constraint. I am not saying that you shouldn&apos;t pay attention to how fast is a game engine when picking one, I am just saying that please do not become obsessed as I did. Computers nowadays are incredibly powerful and these kind of super-fast tools are harder to master. Try to do anything with C and OpenGL and you will understand why.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With this post, I was not trying to cover all the important points related to picking a game engine. I just wanted to talk about some that usually are overlooked by beginners. I hope that this has been useful or at least interesting. Now I am going to leave some resources that came to my mind while writing this.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/user/gamefromscratch&quot;&gt;Gamefromscratch&lt;/a&gt; YouTube channel&lt;/strong&gt;. Mostly reviews of tools and resources for game development.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/user/TheChernoProject&quot;&gt;The Cherno&lt;/a&gt; YouTube channel&lt;/strong&gt;. A madlad who is creating his own game engine. Advanced but interesting. Also incredibly long.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://learnopengl.com/&quot;&gt;Learn OpenGL&lt;/a&gt; website&lt;/strong&gt;. A really nice OpenGL guide for advanced beginners. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=m48xthwkpI0&quot;&gt;Why is every indie game made with Pixel Art?&lt;/a&gt; video from &lt;a href=&quot;https://www.youtube.com/channel/UCcmTXZ3oJVe0EHoTE4wCXpA&quot;&gt;Out of Sight&lt;/a&gt;&lt;/strong&gt;. A really interesting video about why pixel art is so popular in indie games.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=tInaI3pU19Y&quot;&gt;Unity DOTS vs Handbuilt: Sample Project&lt;/a&gt; video from &lt;a href=&quot;https://www.youtube.com/channel/UCWm66r5LauAXin-Asjgo8YQ&quot;&gt;Nick Caston&lt;/a&gt;&lt;/strong&gt;. Video comparing how efficient is Unity compared to C++ and OpenGL.2&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="Engine" /><category term="programming-language" /><category term="tool" /><category term="framework" /><summary type="html">Second blog post, and on the same day. You can call me a workaholic. The truth is that I just wanted to write something more related to game development. There are lots of things I have already learned that I will be publishing during the next few days. Today we are talking about game engines. The title is a bit misleading since I will not talk just about game engines, I will also talk about frameworks and other tools, we could rewrite the title as: &quot;About things that we use to do games&quot;. But it was not that catchy.</summary></entry><entry><title type="html">Blog presentation</title><link href="/agdb/2021/05/23/Blog-presentation.html" rel="alternate" type="text/html" title="Blog presentation" /><published>2021-05-23T10:00:00+02:00</published><updated>2021-05-23T10:00:00+02:00</updated><id>/agdb/2021/05/23/Blog-presentation</id><content type="html" xml:base="/agdb/2021/05/23/Blog-presentation.html">&lt;p&gt;Hi, how are you doing? I am fine, thanks. Either I have sent you personally the link to this blog, or I have no idea why you are here. Anyway, in this post, I plan to explain why I am making this blog, so, without further ado...&lt;/p&gt;
&lt;p&gt;I already had a similar blog and I found it useful: it was a good way to record all my progress and mistakes. Usually, there were more mistakes than progress, but it is really important to remember the embarrassing mistakes to avoid repeating them. So this time I am planning to do the same but better. It also could be useful for the people that want to discover how is developing an indie game by somebody who just finished his degree and has zero experience in game development. We are going to learn a lot together. I also would like to improve my English writing, and this could be a good way to do it. The reason why I am making a new blog instead of using the old one is that some points could be improved: it was too tedious to publish a new post, the design could be better and, the structure was too complex. We could think about this blog as a v2 of the old one.&lt;/p&gt;
&lt;p&gt;So that was &apos;why&apos; I am using this blog. Now let&apos;s talk about the blog itself. I am not a web developer. I did an internship on web development and, after that, I was sure that I did not want to be a web developer. Today I still think that web development is not my thing. I would prefer to be a carpenter. But I have to admit that web development can be useful, for example, to create webs. One of the things that I do not like about the modern web is that even the simplest of the webs is bloated with stuff that I do not need, at a software and design level. This blog is &lt;em&gt;simple&lt;/em&gt;. The fanciest thing you will find here is the search bar, which is a JavaScript function with less than 20 lines, and I am thinking about removing it since everybody can use the search function in his browser (ctrl+F). I am using &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; with &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github pages&lt;/a&gt; and &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; as a text editor. That&apos;s all I need. The posts are created in markdown and once I push it to &lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt;, &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt; takes care of the rest of the work and it gets uploaded programagically. All the editing happens locally but I can edit it via the Github webpage. I have data redundancy (since it is on my computer and in Github) and I just need to press a few buttons (zero commands) to publish it.&lt;/p&gt;
&lt;p&gt;If we talk about the design, it is around 60 lines of CSS (including the syntax highlighting) and the most basic HTML you can imagine. ~~Maybe (probably not) you ask yourself: &quot;Why the home button is under the title of the post?&quot;. It is because this allows me to delete four lines of HTML~~. It just has two kinds of pages: the home page and the posts. My contact information (e-mail) is at the bottom of the home page, no need for a separate page for that.&lt;/p&gt;
&lt;p&gt;That was a bit of a rant, but it is also a statement. That&apos;s what I think about software development: &lt;a href=&quot;https://en.wikipedia.org/wiki/KISS_principle&quot;&gt;KISS&lt;/a&gt;. Now let&apos;s talk about how I am going to use it. I plan to write something almost every day, even if it is five lines. That way, I force myself to invest a bit of time in the development of the project every day. Sometimes it will be things like what I have learned, what I have discovered, what I like or dislike about it etc. Be prepared to hear me complaining about things that probably I did not fully understand. But there will also be posts about how to solve that problem, a different approach to do the same thing,  recommending resources, and, of course, showing the outcome of my effort. It will not be well organized, that is why I decided to go with a tag system: it is simple and allows me to have some organization while not having it at all. Maybe I improve the search bar to allow for wildcards and specific attributes search, but that is the most I can do about the organization.&lt;/p&gt;
&lt;p&gt;I think that was enough for a first post, a lot of text. I will finish by sharing with you an artist whose pixel art I like due to the way she works with the shapes, most of the time making them pixel-perfect even in weird angles. Her name is &lt;a href=&quot;https://www.instagram.com/nostalgictree/&quot;&gt;nostalgictree&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Pixel art by nostalgictree.&quot; src=&quot;/agdb/assets/media/2021-05-23-Blog-presentation/nostalgictree_art.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EDIT:&lt;/strong&gt; I decided to change a few things about how does the blog look. For the latest news check this blog post: &lt;a href=&quot;/agdb/2021/05/25/I-am-a-sinner.html&quot;&gt;I am a sinner&lt;/a&gt;. I have also crossed out two lines because they no longer made sense&lt;/p&gt;</content><author><name></name></author><category term="Presentation" /><category term="meta" /><category term="first" /></entry></feed>